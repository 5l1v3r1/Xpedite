"""
Python module to clean up and generate files used with Xpedite pytests.
This module generates baseline profile information and probe state information.
Baseline information for profiles is created by generating a Jupyter notebook
for a new Xpedite run, and copying over the .xpd profile information file and
.data files from the xpedite run to the pytest data directory.

Author:  Brooke Elizabeth Cantwell, Morgan Stanley
"""

import os, sys
xpeditePath = os.path.normpath(os.path.join(__file__, '../../../../../lib'))
sys.path.append(xpeditePath)

from profile          import (
                        buildNotebook, cleanUpDataDir,
                        loadProfileInfo, loadProbes
                      )

import logging
import logging.config
from logger import LOG_CONFIG_PATH
logging.config.fileConfig(LOG_CONFIG_PATH)

def normalizePath(path, replacePath):
  path = os.path.realpath(path).replace(replacePath, '')
  path = path[1:] if path.startswith('/') else path
  return path

def generateBaseline(binary, dataDir):
  """
  Generate the following files:
  1. .xpd data file generated from building a Jupyter notebook
     Used to test building of notebooks
  2. Xpedite application information file
     Used to attach profiler for testing recording, reporting, probe status, and notebooks
  3. xpediteDemo .data files
     Files that are collected by an xpedite app to build transactions
  4. Serialized probe baseline file
     Used to compare probe states generated by an xpedite app to baseline probes
  """

  import cPickle as pickle
  from shutil import copyfile
  replacePath = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../../..'))
  cleanUpDataDir()
  _, dataFilePath, app, _ = buildNotebook(binary)
  copyfile(dataFilePath, os.path.join(dataDir, 'baseline.xpd'))
  copyfile(app.xpediteApp.appInfoPath, os.path.join(dataDir, 'xpedite-appinfo.txt'))
  for dataFile in app.xpediteApp.gatherFiles(app.xpediteApp.sampleFilePattern()):
    copyfile(dataFile, os.path.join(dataDir, os.path.basename(dataFile)))
  profileInfo = loadProfileInfo(os.path.join(dataDir, 'profileInfo.py'))
  probes = loadProbes(binary, profileInfo)
  for probe in probes:
    probe.filePath = normalizePath(probe.filePath, replacePath)
    probe.path = normalizePath(probe.path, replacePath)
  with open(os.path.join(dataDir, 'probeBaseline.pkl'), 'w') as probeFileHandle:
    probeFileHandle.write(pickle.dumps(probes))

def main():
  """
  Set the path to the data directory generated baseline files are stored in and
  generate files
  """
  testDir = os.path.abspath(os.path.dirname(__file__))
  dataDir = os.path.join(testDir, '..', 'data')
  demoBinary = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../../..', 'install/bin/xpediteDemo'))
  generateBaseline(demoBinary, dataDir)

if __name__ == '__main__':
  main()
